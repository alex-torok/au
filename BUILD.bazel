# Copyright 2022 Aurora Operations, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_license//rules:license.bzl", "license")

exports_files(["mkdocs.yml"])

license(
    name = "license",
    license_text = "LICENSE.txt",
    license_kind = "@rules_license//licenses/spdx:Apache-2.0"
)

filegroup(
    name = "all_docs",
    srcs = glob(["docs/**"]),
    visibility = ["//tools/docs:__pkg__"],
)

filegroup(
    name = "all_headers",
    srcs = [
        ":au_all_units_hh",
        ":au_all_units_noio_hh",
        ":au_hh",
        ":au_noio_hh",
    ],
    visibility = ["//tools/docs:__pkg__"],
)

BASE_UNITS = [
    "meters",
    "seconds",
    "grams",
    "kelvins",
    "amperes",
    "moles",
    "candelas",
    "radians",
    "bits",
    "unos",
]

BASE_UNIT_STRING = " ".join(BASE_UNITS)

GIT_ID_CMD = "cat bazel-out/stable-status.txt | grep STABLE_GIT_ID | sed 's/STABLE_GIT_ID \\(.*\\)/\\1/' | tr -d '\\n'"

CMD_ROOT = "$(location tools/bin/make-single-file) {extra_opts} {units} {all_constants} --version-id $$({id_cmd}) > $(OUTS)"

################################################################################
# Release single-file package `au.hh`

genrule(
    name = "au_hh",
    srcs = ["//au:headers"],
    outs = ["docs/au.hh"],
    cmd = CMD_ROOT.format(
        all_constants = "",
        extra_opts = "",
        id_cmd = GIT_ID_CMD,
        units = "--units " + BASE_UNIT_STRING,
    ),
    stamp = True,
    tools = ["tools/bin/make-single-file"],
)

cc_library(
    name = "au_hh_lib",
    hdrs = ["docs/au.hh"],
    visibility = ["//release:__pkg__"],
)

################################################################################
# Release single-file package `au_noio.hh`

genrule(
    name = "au_noio_hh",
    srcs = ["//au:headers"],
    outs = ["docs/au_noio.hh"],
    cmd = CMD_ROOT.format(
        all_constants = "",
        extra_opts = "--noio",
        id_cmd = GIT_ID_CMD,
        units = "--units " + BASE_UNIT_STRING,
    ),
    stamp = True,
    tools = ["tools/bin/make-single-file"],
    visibility = ["//release:__pkg__"],
)

cc_library(
    name = "au_noio_hh_lib",
    hdrs = ["docs/au_noio.hh"],
    visibility = ["//release:__pkg__"],
)

################################################################################
# Release single-file package `au_all_units.hh`

genrule(
    name = "au_all_units_hh",
    srcs = ["//au:headers"],
    outs = ["docs/au_all_units.hh"],
    cmd = CMD_ROOT.format(
        all_constants = "--all-constants",
        extra_opts = "",
        id_cmd = GIT_ID_CMD,
        units = "--all-units",
    ),
    stamp = True,
    tools = ["tools/bin/make-single-file"],
)

cc_library(
    name = "au_all_units_hh_lib",
    hdrs = ["docs/au_all_units.hh"],
    visibility = ["//release:__pkg__"],
)

################################################################################
# Release single-file package `au_all_units_noio.hh`

genrule(
    name = "au_all_units_noio_hh",
    srcs = ["//au:headers"],
    outs = ["docs/au_all_units_noio.hh"],
    cmd = CMD_ROOT.format(
        all_constants = "--all-constants",
        extra_opts = "--noio",
        id_cmd = GIT_ID_CMD,
        units = "--all-units",
    ),
    stamp = True,
    tools = ["tools/bin/make-single-file"],
    visibility = ["//release:__pkg__"],
)

cc_library(
    name = "au_all_units_noio_hh_lib",
    hdrs = ["docs/au_all_units_noio.hh"],
    visibility = ["//release:__pkg__"],
)
